{"version":3,"sources":["components/AddProduct.js","components/AddRoom.js","components/Home.js","components/Menu.js","components/Products.js","components/Room.js","components/RoomList.js","App.js","serviceWorker.js","index.js"],"names":["AddProduct","props","nProduct","e","setState","newP","target","value","addProduct","hide","build","room","productsList","length","state","map","name","roomType","addNewProduct","alert","defaultValue","onChange","this","onClick","Component","AddRoom","addType","addName","newName","slice","roomName","addColor","roomColor","createRoom","undefined","add","placeholder","to","className","Home","type","class","Menu","Products","power","product","index","color","Room","show","showCreateProduct","RoomList","change","App","showRoom","i","roomToShow","t","n","c","rooms","p","newRooms","newRoom","trueShowCreateProduct","falseShowCreateProduct","changePower","k","exact","path","component","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wUAEqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,SAAS,SAACC,GACN,EAAKC,SAAS,CAACC,KAAKF,EAAEG,OAAOC,SAVd,EAYnBC,WAAW,WACP,EAAKP,MAAMQ,OACX,IAAIC,GAAM,EACP,EAAKT,MAAMU,KAAKC,aAAaC,QAAQ,IAAGH,GAAM,GAC5B,WAAlB,EAAKI,MAAMT,MACV,EAAKJ,MAAMU,KAAKC,aAAaG,KAAI,SAAAZ,GACjB,WAATA,EAAEa,OACDN,GAAM,MAKG,WAAlB,EAAKI,MAAMT,MACmB,qBAA1B,EAAKJ,MAAMU,KAAKM,WAEfP,GAAM,GAIXA,EACF,EAAKT,MAAMiB,cAAc,EAAKJ,MAAMT,MAEpCc,MAAM,UA/BP,EAAKL,MAAQ,CACTT,KAAK,mBAJM,E,sEAwCf,OACI,6BACI,4BAAQe,aAAa,kBAAkBC,SAAUC,KAAKpB,UAClD,4BAAQK,MAAM,mBAAd,qBACA,4BAAQA,MAAM,mBAAd,mBACA,4BAASA,MAAM,UAAf,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,SACK,6BAET,6BACA,4BAAQgB,QAASD,KAAKd,YAAtB,gBACN,kC,GArD8BgB,aCCnBC,E,YACjB,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KAMVyB,QAAQ,SAACvB,GACL,EAAKC,SAAS,CAACa,SAASd,EAAEG,OAAOC,SARlB,EAUnBoB,QAAQ,SAACxB,GACL,GAAGA,EAAEG,OAAOC,MAAMM,OAAO,EACzB,CACI,IAAIe,EAAQzB,EAAEG,OAAOC,MAAMsB,MAAM,EAAE,GACnC1B,EAAEG,OAAOC,MAAMqB,OAIf,EAAKxB,SAAS,CAAC0B,SAAS3B,EAAEG,OAAOC,SAlBtB,EAsBnBwB,SAAS,SAAC5B,GACN,EAAKC,SAAS,CAAC4B,UAAU7B,EAAEG,OAAOC,SAvBnB,EAyBnB0B,WAAW,WACkB,SAArB,EAAKnB,MAAMG,eAA0CiB,GAArB,EAAKpB,MAAMgB,UAExC,EAAKhB,MAAMgB,SAASjB,OAAO,EAC7B,EAAKZ,MAAMkC,IAAI,EAAKrB,MAAMG,SAAS,EAAKH,MAAMgB,SAAS,EAAKhB,MAAMkB,WAOnEb,MAAM,UAjCV,EAAKL,MAAQ,CACTG,SAAS,SAJE,E,sEA2Cf,OACI,6BACI,4BAAQG,aAAa,QAAQC,SAAUC,KAAKI,SACxC,4BAAQnB,MAAM,SAAd,uBACA,4BAAQA,MAAM,WAAd,WACA,4BAASA,MAAM,qBAAf,qBACA,4BAAQA,MAAM,WAAd,YACK,6BAAK,6BAAK,6BACnB,2BAAOc,SAAUC,KAAKK,QAASS,YAAY,cAP/C,IAOoE,6BAAK,6BAAK,6BAC1E,4BAAQhB,aAAa,8BAA8BC,SAAUC,KAAKS,UAC9D,4BAAQxB,MAAM,+BAAd,qBACA,4BAAQA,MAAM,+BAAd,SACA,4BAAQA,MAAM,kCAAd,SACA,4BAAQA,MAAM,oCAAd,QACA,4BAAQA,MAAM,iCAAd,OACA,4BAAQA,MAAM,kCAAd,UACA,4BAAQA,MAAM,+BAAd,cACA,4BAAQA,MAAM,+BAAd,UAEK,6BACT,6BACA,kBAAC,IAAD,CAAM8B,GAAI,KAAK,4BAAQd,QAASD,KAAKW,YAAtB,cAErB,6BACM,4BAAQK,UAAWhB,KAAKR,MAAMkB,WAA9B,IAA2CV,KAAKR,MAAMgB,e,GApEjCN,aCChBe,G,uLAEb,OACI,6BACI,kBAAC,IAAD,CAAMF,GAAI,YAAW,4BAAQG,KAAK,SAASC,MAAM,oCAAmC,uBAAGA,MAAM,cAAT,Y,GAJlEjB,cCDnB,SAASkB,IACpB,OACI,yBAAKJ,UAAU,OACX,yBAAKA,UAAU,oCAEX,kBAAC,IAAD,CAAMD,GAAI,KAAI,4BAAQC,UAAU,oCAAlB,W,ICNTK,E,YAEjB,WAAYC,EAAMC,EAAQC,GAAQ,IAAD,8BAC7B,4CAAMF,EAAMC,EAAQC,KASxBF,MAAM,WACF,EAAK3C,MAAM2C,MAAM,EAAK3C,MAAM6C,QAR5B,EAAKhC,MAAQ,GAHgB,E,sEAgB7B,OACI,yBAAK2B,MAAM,SACP,4BAAQlB,QAASD,KAAKsB,MAAOJ,KAAK,SAASC,MAAOnB,KAAKrB,MAAM4C,QAAQE,OAAQzB,KAAKrB,MAAM4C,QAAQ7B,MADpG,IACmH,kC,GApBzFQ,aCGjBwB,E,YAEjB,cAAqC,IAAD,EAAvBC,EAAuB,EAAvBA,KAAKd,EAAkB,EAAlBA,IAAIxB,EAAc,EAAdA,KAAMmC,EAAQ,EAARA,MAAQ,4BAChC,4CAAM,CAACG,OAAKd,MAAIxB,OAAMmC,YAO1BtC,WAAW,WAAK,EAAKP,MAAMgD,QALvB,EAAKnC,MAAQ,CACToC,mBAAkB,GAJU,E,sEAahC,OAEI,yBAAMZ,UAAWhB,KAAKrB,MAAMU,KAAKqB,WAC7B,6BACA,yCAAeV,KAAKrB,MAAMU,KAAKmB,UAAc,6BAC7C,yCAAeR,KAAKrB,MAAMU,KAAKM,UAAc,6BAC7C,4BAAQM,QAASD,KAAKd,WAAaiC,MAAM,mBAAzC,qB,GArBkBjB,aCFb2B,E,YAGjB,WAAYlD,GAAQ,IAAD,8BACf,4CAAMA,KAWVmD,OAAO,WACH,EAAKnD,MAAMgD,KAAK,EAAKnC,MAAMgC,QAV3B,EAAKhC,MAAQ,CACT0B,KAAKvC,EAAMuC,KACXxB,KAAKf,EAAMe,KACX+B,MAAM9C,EAAM8C,MACZnC,aAAaX,EAAMW,aACnBkC,MAAM7C,EAAM6C,OARD,E,sEAoBf,OACI,yBAAKL,MAAM,SAEP,kBAAC,IAAD,CAAMJ,GAAI,SAAQ,4BAAQd,QAASD,KAAK8B,OAAQd,UAAWhB,KAAKR,MAAMiC,OAAQzB,KAAKR,MAAME,Y,GA1BnEQ,aCqBjB6B,E,YACnB,aAAc,IAAD,8BACX,+CAUFC,SAAS,SAACC,GAER,EAAKnD,SAAS,CAACoD,WAAWD,KAbf,EAebtB,WAAW,SAACwB,EAAEC,EAAEC,GAEd,EAAKvD,SAAS,CAACwD,MAAM,GAAD,mBAAK,EAAK9C,MAAM8C,OAAhB,CAAsB,CAAC3C,SAASwC,EAAG3B,SAAS4B,EAAE1B,UAAU2B,EAAG/C,aAAa,SAjBjF,EAoBbM,cAAc,SAAC2C,GAEb,IAAIN,EAAE,EAAKzC,MAAM0C,WACXM,EAAW,EAAKhD,MAAM8C,MACtBG,EAAUD,EAASP,GACzBQ,EAAQnD,aAAR,sBAA2BmD,EAAQnD,cAAnC,CAAgD,CAACI,KAAK6C,EAAEjB,OAAM,EAAMG,MAAM,oBAC1Ee,EAASP,GAAKQ,EACd,EAAK3D,SAAS,CAACwD,MAAME,KA3BV,EA6BbE,sBAAsB,WAAK,EAAK5D,SAAS,CAAC8C,mBAAkB,KA7B/C,EA8Bbe,uBAAuB,WAAK,EAAK7D,SAAS,CAAC8C,mBAAkB,KA9BhD,EA+BZgB,YAAY,SAACC,GAEZ,IAAIZ,EAAE,EAAKzC,MAAM0C,WACXM,EAAW,EAAKhD,MAAM8C,MACtBG,EAAUD,EAASP,GACzBQ,EAAQnD,aAAauD,GAAGvB,OAASmB,EAAQnD,aAAauD,GAAGvB,MACtDmB,EAAQnD,aAAauD,GAAGvB,MAErBmB,EAAQnD,aAAauD,GAAGpB,MAAM,kBAI9BgB,EAAQnD,aAAauD,GAAGpB,MAAM,iBAEpCe,EAASP,GAAKQ,EACd,EAAK3D,SAAS,CAACwD,MAAME,KA3CrB,EAAKhD,MAAQ,CACX8C,MAAM,GACNJ,WAAW,EACXN,mBAAkB,GANT,E,sEAkDH,IAAD,OACP,OACE,6BACE,yBAAKZ,UAAU,OACb,2CACA,kBAAC,IAAD,KACF,kBAACI,EAAD,MAEA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAIC,UAAW,WAAK,OAAO,6BACxC,EAAKxD,MAAM8C,MAAM7C,KAAI,SAACwD,EAAQhB,GAC/B,OAAO,kBAAC,EAAD,CAAUN,KAAM,EAAKK,SAAUd,KAAM+B,EAAQtD,SAAUD,KAAMuD,EAAQzC,SAAUiB,MAAOwB,EAAQvC,UAAYpB,aAAc2D,EAAQ3D,aAAckC,MAAOS,OAC3J,6BAAK,6BAAK,6BAAK,6BAAK,6BACrB,kBAAC,EAAD,UAGF,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,WAAWC,UAAW,WAAK,OAAO,kBAAC,EAAD,CAASnC,IAAK,EAAKF,gBACvE,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,QAAQC,UAAW,WAAK,OAAO,6BAC/C,yBAAKhC,UAAU,OAAM,kBAAC,EAAD,CAAMA,UAAU,QAAQW,KAAM,EAAKe,sBAAuB7B,IAAK,EAAKjB,cAAgB4B,MAAO,EAAKhC,MAAM0C,WAAY7C,KAAM,EAAKG,MAAM8C,MAAM,EAAK9C,MAAM0C,cAC1K,EAAK1C,MAAMoC,kBACN,kBAAC,EAAD,CAAYZ,UAAU,QAClB7B,KAAM,EAAKwD,uBACXnB,MAAO,EAAKhC,MAAM0C,WAClBtC,cAAe,EAAKA,cACpBP,KAAM,EAAKG,MAAM8C,MAAM,EAAK9C,MAAM0C,cACnC,+BAER,EAAK1C,MAAM8C,MAAM,EAAK9C,MAAM0C,YAAY5C,aAAaG,KAAI,SAACwD,EAAQhB,GACjE,OAAO,kBAAC,EAAD,CAAUjB,UAAU,QAAQM,MAAO,EAAKsB,YAAerB,QAAS0B,EAASzB,MAAOS,aAezF,mC,GA9FuB/B,aCZbgD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2d6c453e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class AddProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            newP:\"Air conditioner\"           \r\n        }\r\n\r\n    }\r\n\r\n    nProduct=(e)=>{\r\n        this.setState({newP:e.target.value})\r\n    };\r\n    addProduct=()=>{\r\n        this.props.hide()\r\n        let build=true\r\n        if(this.props.room.productsList.length>=5){build=false}\r\n        if(this.state.newP===\"Stereo\"){\r\n            this.props.room.productsList.map(e=>{\r\n                if(e.name===\"Stereo\"){\r\n                    build=false;\r\n                }\r\n            \r\n            })\r\n        }\r\n        if(this.state.newP===\"Boiler\"){\r\n            if(this.props.room.roomType!=\"Bathroom / Toilet\")\r\n            {\r\n                build=false;\r\n            }\r\n        }\r\n        \r\n        if(build)\r\n        {this.props.addNewProduct(this.state.newP);}\r\n        else\r\n        {alert(\"Error\");}\r\n        \r\n    };\r\n    \r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <select defaultValue=\"Air conditioner\" onChange={this.nProduct} >\r\n                    <option value=\"Air conditioner\"> Choose A Product</option>\r\n                    <option value=\"Air conditioner\">Air conditioner</option>\r\n                    <option  value=\"Boiler\">Boiler</option>\r\n                    <option value=\"Stereo\">Stereo</option>\r\n                    <option value=\"Lamp\">Lamp</option>\r\n                </select><br/>\r\n                \r\n                <br/>\r\n                <button onClick={this.addProduct}> Add Product</button>\r\n          <br/>\r\n                \r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AddRoom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = { \r\n            roomType:\"Error\"          \r\n        }\r\n    }\r\n    addType=(e)=>{\r\n        this.setState({roomType:e.target.value})\r\n    }\r\n    addName=(e)=>{\r\n        if(e.target.value.length>5)\r\n        {\r\n            let newName=e.target.value.slice(0,5);\r\n            e.target.value=newName;\r\n\r\n        }\r\n        else{\r\n            this.setState({roomName:e.target.value})\r\n        }\r\n    }\r\n\r\n    addColor=(e)=>{\r\n        this.setState({roomColor:e.target.value})\r\n    }\r\n    createRoom=()=>{\r\n        if((this.state.roomType!=\"Error\")&&(this.state.roomName!=undefined))\r\n        {\r\n            if(this.state.roomName.length>0)\r\n            {this.props.add(this.state.roomType,this.state.roomName,this.state.roomColor)\r\n            }\r\n            else{\r\n                alert(\"Error\"); \r\n            }   \r\n        }\r\n        else{\r\n            alert(\"Error\"); \r\n        }  \r\n    }\r\n    \r\n    \r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <select defaultValue=\"Error\" onChange={this.addType} >\r\n                    <option value=\"Error\"> Choose A New Room </option>\r\n                    <option value=\"BadRoom\">BadRoom</option>\r\n                    <option  value=\"Bathroom / Toilet\">Bathroom / Toilet</option>\r\n                    <option value=\"Kitchen\">Kitchen</option>\r\n                </select><br/><br/><br/>\r\n                <input onChange={this.addName} placeholder=\"Room Name\"></input> <br/><br/><br/>\r\n                <select defaultValue=\"p-3 mb-2 bg-white text-dark\" onChange={this.addColor}>\r\n                    <option value=\"p-3 mb-2 bg-white text-dark\">Choose Room Color</option>\r\n                    <option value=\"p-3 mb-2 bg-white text-dark\">White</option>\r\n                    <option value=\"p-3 mb-2 bg-success text-white\">Green</option>\r\n                    <option value=\"p-3 mb-2 bg-secondary text-white\">Grey</option>\r\n                    <option value=\"p-3 mb-2 bg-danger text-white\">Red</option>\r\n                    <option value=\"p-3 mb-2 bg-warning text-white\">Yellow</option>\r\n                    <option value=\"p-3 mb-2 bg-info text-white\">Light Blue</option>\r\n                    <option value=\"p-3 mb-2 bg-dark text-white\">Black</option>\r\n                \r\n                </select><br/>\r\n                <br/>\r\n                <Link to ='/' ><button onClick={this.createRoom}> Add Room</button></Link>\r\n\r\n          <br/>\r\n                <button className={this.state.roomColor}> {this.state.roomName}</button>\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to ='/addroom'><button type=\"button\" class=\"btn btn-danger btn-circle btn-xl\"><i class=\"fa fa-plus\">+</i>\r\n                            </button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Menu() {\r\n    return (\r\n        <div className='row'>\r\n            <div className='btn btn-primary btn-lg btn-block'>\r\n                {/* Home */}\r\n                <Link to ='/'><button className='btn btn-primary btn-lg btn-block'>home</button></Link>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Products extends Component {\r\n\r\n    constructor(power,product,index) {\r\n        super(power,product,index)\r\n    \r\n        this.state = {\r\n          \r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    power=()=>{\r\n        this.props.power(this.props.index);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class='col-4'>\r\n                <button onClick={this.power} type=\"button\" class={this.props.product.color}>{this.props.product.name}</button> <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport AddProduct from './AddProduct.js';\r\nimport Products from './Products'\r\n\r\n\r\nexport default class Room extends Component {\r\n\r\n    constructor({show,add,room, index}) {\r\n        super({show,add,room, index})\r\n    \r\n        this.state = {  \r\n            showCreateProduct:false\r\n\r\n        }\r\n    }\r\n    addProduct=()=>{this.props.show()}\r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n\r\n            <div  className={this.props.room.roomColor}>\r\n                <div >\r\n                <h2>Room Name:{this.props.room.roomName}</h2><br/>\r\n                <h2>Room Type:{this.props.room.roomType}</h2><br/>\r\n                <button onClick={this.addProduct}  class=\"btn btn-warning\">Add Product</button>\r\n              \r\n                </div>\r\n\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class RoomList extends Component {\r\n\r\n    //rconst\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            type:props.type,\r\n            name:props.name,\r\n            color:props.color,\r\n            productsList:props.productsList,\r\n            index:props.index\r\n             \r\n        }\r\n    }\r\n    change=()=>{\r\n        this.props.show(this.state.index)\r\n    }\r\n    \r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class='col-4'>\r\n                {/* <Link to ='/{this.props.index}'><button class={this.props.color}>{this.props.name}</button></Link> */}\r\n                <Link to ='/room'><button onClick={this.change} className={this.state.color}>{this.state.name}</button></Link>\r\n                            \r\n            </div>\r\n        )\r\n    }\r\n}","import 'bootstrap/dist/css/bootstrap.css';\n//npm install react-bootstrap bootstrap\n//start bootstrap\nimport './App.css';\nimport {HashRouter as Router, Switch , Route,Link } from 'react-router-dom';\n//import {BrowserRouter as Router, Switch , Route } from 'react-router-dom';\n//npm install react-router-dom\n//npm i gh-pages\n//github\n\n\nimport AddProduct from './components/AddProduct.js';\nimport AddRoom from './components/AddRoom.js';\nimport Home from './components/Home.js';\nimport Menu from './components/Menu.js';\nimport Products from './components/Products.js';\nimport Room from './components/Room.js';\nimport RoomList from './components/RoomList.js';\n\n\nimport React, { Component } from 'react'\n\n\n\nexport default class App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      rooms:[],\n      roomToShow:0,\n      showCreateProduct:false\n      \n    };\n    \n  }\n  showRoom=(i)=>\n  {\n    this.setState({roomToShow:i})\n  };\n  createRoom=(t,n,c)=>{\n\n    this.setState({rooms:[...this.state.rooms,{roomType:t, roomName:n,roomColor:c ,productsList:[]}]});\n    \n  };\n  addNewProduct=(p)=>\n  {\n    let i=this.state.roomToShow;\n    const newRooms = this.state.rooms;\n    const newRoom = newRooms[i];\n    newRoom.productsList = [...newRoom.productsList,{name:p,power:false,color:\"btn btn-danger\"}];\n    newRooms[i] = newRoom;\n    this.setState({rooms:newRooms});\n  };\n  trueShowCreateProduct=()=>{this.setState({showCreateProduct:true});};\n  falseShowCreateProduct=()=>{this.setState({showCreateProduct:false});};\n   changePower=(k)=>\n   {\n    let i=this.state.roomToShow;\n    const newRooms = this.state.rooms;\n    const newRoom = newRooms[i];\n    newRoom.productsList[k].power =!(newRoom.productsList[k].power) \n    if(newRoom.productsList[k].power)\n        {\n          newRoom.productsList[k].color=\"btn btn-success\"\n        }\n        else\n        {\n          newRoom.productsList[k].color=\"btn btn-danger\"\n        }\n    newRooms[i] = newRoom;\n    this.setState({rooms:newRooms});\n   }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <h1>smart house</h1>\n          <Router>\n        <Menu/>\n          \n        <Switch>\n        <Route exact path='/' component={()=>{return <div>\n            {this.state.rooms.map((element,i)=>{\n            return <RoomList show={this.showRoom} type={element.roomType} name={element.roomName} color={element.roomColor}  productsList={element.productsList} index={i}/>\n          })}<br/><br/><br/><br/><br/>\n            <Home/>\n        </div>\n           }}/>\n          <Route exact path='/addroom' component={()=>{return <AddRoom add={this.createRoom}/>}}/>\n          <Route exact path='/room' component={()=>{return <div> \n            <div className='row'><Room className='col-4' show={this.trueShowCreateProduct} add={this.addNewProduct}  index={this.state.roomToShow} room={this.state.rooms[this.state.roomToShow]}/>\n          {this.state.showCreateProduct? \n                <AddProduct className='col-3'\n                    hide={this.falseShowCreateProduct}\n                    index={this.state.roomToShow}\n                    addNewProduct={this.addNewProduct}\n                    room={this.state.rooms[this.state.roomToShow]}\n                />:<div/>}</div>\n          \n          {this.state.rooms[this.state.roomToShow].productsList.map((element,i)=>{\n            return <Products className='col-1' power={this.changePower}   product={element} index={i}/>\n          })}\n            \n\n\n          </div>}}/>\n         \n\n\n\n\n          \n        </Switch>\n      </Router>\n          \n          <br/>\n          {/* <p>room number:{this.state.roomToShow}</p> */}\n          {/* {this.state.room.map((element,i)=>{\n            return <RoomList show={this.showRoom} type={element.roomType} name={element.roomName} color={element.roomColor}  productsList={element.productsList} index={i}/>\n          })} */}\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}